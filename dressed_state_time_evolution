#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Jan 11 15:37:02 2019

@author: avinashmocherla
"""
import qutip as qt
import numpy as np



def dressed_Hamiltonian(J, nu, nphonon, ldp, rabi):
    """
    Returns the dressed state Hamiltonian. In the form: 
        H = H_mot + H_spinspin + H_int
    
    Args:
        J: Number of ions in trap 
        nu: trap frequency 
        nphonon: maximum number of phonons in system
        ldp: Lamb-Dicke Parameter
        rabi: driving field rabi frequency
        
    """
    

    """Dressed Basis States"""
    basis_m1 = qt.tensor(qt.basis(4,0))
    
    basis_0 = qt.tensor(qt.basis(4,1))

    basis_p1 = qt.tensor(qt.basis(4,2))

    basis_0tag = qt.tensor(qt.basis(4,3))
    
    sigmaz_fl = [[-1,0,0,0],
                 [0,0,0,0],
                 [0,0,1,0],
                 [0,0,0,0]]
    
    sigmaz_fl = qt.Qobj(sigmaz_fl)
    """Motional mode operators"""
    a = qt.tensor(qt.qeye(4), qt.qeye(4), qt.destroy(nphonon))

    a_dag = qt.tensor(qt.qeye(4), qt.qeye(4) ,qt.create(nphonon))

    """Spin Spin Operators"""
    sigmaz_1 = qt.tensor(sigmaz_fl, qt.qeye(4), qt.qeye(nphonon))

    sigmaz_2 = qt.tensor(qt.qeye(4), sigmaz_fl, qt.qeye(nphonon))

    """More Spin-Spin Operators""" 
    

    c1 = qt.tensor((basis_p1 * basis_0.trans()), qt.qeye(4),qt.qeye(nphonon) )
 
    
    c2 = qt.tensor((basis_0 * basis_m1.trans()), qt.qeye(4), qt.qeye(nphonon))

    
    c3 = qt.tensor(qt.qeye(4), (basis_p1 * basis_0.trans()), qt.qeye(nphonon))

    
    c4 = qt.tensor(qt.qeye(4), (basis_0 * basis_m1.trans()), qt.qeye(nphonon))

    t1 = (c1 + c2) * (ldp*(a_dag - a)).expm()   + (c1.trans() + c1.trans()) * (ldp*(a_dag - a)).expm()
    
    t2 = (c3 + c4) * (ldp*(a_dag - a)).expm() + (c3.trans() + c4.trans()) * (ldp*(a_dag - a)).expm()

    
    H_mot = nu * a_dag * a #For future reference, a potential problem could be that this is zero indexed. 
 
    H_spinspin =  nu * ldp * (sigmaz_1 * sigmaz_2)
    
    H_int =  ( t1 + t2 )
    print(H_int)
   
    
    return H_mot + H_spinspin + H_int	 
							 
